{"version":3,"sources":["InputIsbn.esm.js"],"names":["_checkDigitMessage","_formSubmitEventListener","__classPrivateFieldSet","this","receiver","privateMap","value","has","TypeError","set","__classPrivateFieldGet","get","ISBN","InputIsbn","HTMLInputElement","[object Object]","super","_formSubmitEvent","bind","isbnCheckDigitMessage","dataset","validationMessageIsbnCheckdigit","undefined","Error","type","minLength","maxLength","pattern","addEventListener","_changeEvent","passive","form","removeEventListener","validity","patternMismatch","_convertValue","_validate","ev","preventDefault","trim","isValid","_clearMessage","_setMessage","message","setCustomValidity","dispatchEvent","Event","WeakMap"],"mappings":"AAAA,IAaIA,EAAoBC,EAbpBC,EAA0BC,MAAQA,KAAKD,wBAA2B,SAAUE,EAAUC,EAAYC,GAClG,IAAKD,EAAWE,IAAIH,GAChB,MAAM,IAAII,UAAU,kDAGxB,OADAH,EAAWI,IAAIL,EAAUE,GAClBA,GAEPI,EAA0BP,MAAQA,KAAKO,wBAA2B,SAAUN,EAAUC,GACtF,IAAKA,EAAWE,IAAIH,GAChB,MAAM,IAAII,UAAU,kDAExB,OAAOH,EAAWM,IAAIP,WAGnBQ,MAAU,qGAMF,MAAMC,UAAkBC,iBACnCC,cACIC,QACAhB,EAAmBS,IAAIN,UAAM,GAC7BF,EAAyBQ,IAAIN,UAAM,GACnCD,EAAuBC,KAAMF,EAA0BE,KAAKc,iBAAiBC,KAAKf,OAEtFY,oBACI,MAAMI,EAAwBhB,KAAKiB,QAAQC,gCAC3C,QAA8BC,IAA1BH,EACA,MAAM,IAAII,MAAM,oEAEpBrB,EAAuBC,KAAMH,EAAoBmB,GACjDhB,KAAKqB,KAAO,OACZrB,KAAKsB,UAAY,GACjBtB,KAAKuB,UAAY,GACjBvB,KAAKwB,QAAU,kGACfxB,KAAKyB,iBAAiB,SAAUzB,KAAK0B,aAAc,CAAEC,SAAS,IAC9D3B,KAAK4B,MAAMH,iBAAiB,SAAUlB,EAAuBP,KAAMF,IAEvEc,uBACIZ,KAAK6B,oBAAoB,SAAU7B,KAAK0B,cACxC1B,KAAK4B,MAAMC,oBAAoB,SAAUtB,EAAuBP,KAAMF,IAK1Ec,eACQZ,KAAK8B,SAASC,kBAIlB/B,KAAKgC,gBACLhC,KAAKiC,aAOTrB,iBAAiBsB,GACblC,KAAKgC,gBACAhC,KAAKiC,aACNC,EAAGC,iBAMXvB,gBACIZ,KAAKG,MAAQH,KAAKG,MAAMiC,OAO5BxB,YACI,MAAmB,KAAfZ,KAAKG,QAGJ,IAAIM,EAAKT,KAAKG,OAAOkC,WAI1BrC,KAAKsC,iBACE,IAJHtC,KAAKuC,YAAYhC,EAAuBP,KAAMH,KACvC,IAUfe,YAAY4B,GACRxC,KAAKyC,kBAAkBD,GACvBxC,KAAK0C,cAAc,IAAIC,MAAM,YAKjC/B,gBACIZ,KAAKyC,kBAAkB,KAG/B5C,EAAqB,IAAI+C,QAAW9C,EAA2B,IAAI8C","file":"InputIsbn.esm.js","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _checkDigitMessage, _formSubmitEventListener;\nimport ISBN from '/customelements-input-isbn/node_modules/@saekitominaga/isbn-verify/dist/ISBN.esm.js';\n/**\n * ISBN input field\n *\n * @version 1.0.2\n */\nexport default class InputIsbn extends HTMLInputElement {\n    constructor() {\n        super();\n        _checkDigitMessage.set(this, void 0); // チェックデジットが不正なときのメッセージ\n        _formSubmitEventListener.set(this, void 0);\n        __classPrivateFieldSet(this, _formSubmitEventListener, this._formSubmitEvent.bind(this));\n    }\n    connectedCallback() {\n        const isbnCheckDigitMessage = this.dataset.validationMessageIsbnCheckdigit;\n        if (isbnCheckDigitMessage === undefined) {\n            throw new Error('Attribute: `data-validation-message-isbn-checkdigit` is not set.');\n        }\n        __classPrivateFieldSet(this, _checkDigitMessage, isbnCheckDigitMessage);\n        this.type = 'text';\n        this.minLength = 10;\n        this.maxLength = 17;\n        this.pattern = '(978|979)-\\\\d{1,5}-\\\\d{1,7}-\\\\d{1,7}-\\\\d|\\\\d{13}|\\\\d{1,5}-\\\\d{1,7}-\\\\d{1,7}-[\\\\dX]|\\\\d{9}[\\\\dX]';\n        this.addEventListener('change', this._changeEvent, { passive: true });\n        this.form?.addEventListener('submit', __classPrivateFieldGet(this, _formSubmitEventListener));\n    }\n    disconnectedCallback() {\n        this.removeEventListener('change', this._changeEvent);\n        this.form?.removeEventListener('submit', __classPrivateFieldGet(this, _formSubmitEventListener));\n    }\n    /**\n     * フォームコントロールの内容が変更されたときの処理\n     */\n    _changeEvent() {\n        if (this.validity.patternMismatch) {\n            /* ブラウザ標準機能によるチェックを優先する */\n            return;\n        }\n        this._convertValue();\n        this._validate();\n    }\n    /**\n     * フォーム送信時の処理\n     *\n     * @param {Event} ev - Event\n     */\n    _formSubmitEvent(ev) {\n        this._convertValue();\n        if (!this._validate()) {\n            ev.preventDefault();\n        }\n    }\n    /**\n     * 入力値を変換（整形）する\n     */\n    _convertValue() {\n        this.value = this.value.trim();\n    }\n    /**\n     * バリデーションを実行\n     *\n     * @returns {boolean} バリデーションが通れば true\n     */\n    _validate() {\n        if (this.value === '') {\n            return true;\n        }\n        if (!new ISBN(this.value).isValid()) {\n            this._setMessage(__classPrivateFieldGet(this, _checkDigitMessage));\n            return false;\n        }\n        this._clearMessage();\n        return true;\n    }\n    /**\n     * カスタムバリデーション文言を設定\n     *\n     * @param {string} message - カスタムバリデーション文言\n     */\n    _setMessage(message) {\n        this.setCustomValidity(message);\n        this.dispatchEvent(new Event('invalid'));\n    }\n    /**\n     * カスタムバリデーション文言を削除\n     */\n    _clearMessage() {\n        this.setCustomValidity('');\n    }\n}\n_checkDigitMessage = new WeakMap(), _formSubmitEventListener = new WeakMap();\n"]}